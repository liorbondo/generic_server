/*******************************************************
Author:             Lior Bondorevsky
Creation date:      10/12/2014
Last modofied date: 10/12/2014
Description:        Select Reactor API
*******************************************************/
#ifndef __SELECT_REACTOR_IMPL__
#define __SELECT_REACTOR_IMPL__

#include <sys/select.h> // fd_set XXX maybe not needed ? 

#include "reactor_impl.h" // Inheritance
#include "timer_queue.h"  // TimerId

namespace adv_cpp
{

class SelectReactorImplementation : public ReactorImplementation
{
public:
  SelectReactorImplementation();
  virtual ~SelectReactorImplementation();
  
  virtual int RegisterIO(EventHandler*, Mask);
  virtual int UnRegisterIO(EventHandler*, Mask);
  virtual TimerId SchedualTimer(EventHandler*, unsigned int mSec, void* arg);
  virtual int CancelTimer(EventHandler*, TimerId);
  virtual int CancelAllTimers(EventHandler*);
  virtual int RegisterSignal(int signalNum);
  virtual int UnRegisterSignal(int signalNum);
  virtual int HandleEvents();
  
private:
  fd_set m_readMasterSet;
  fd_set m_readCurrentSet;
  fd_set m_writeMasterSet;
  fd_set m_writeCurrentSet; 
  fd_set m_exceptMasterSet;
  fd_set m_exceptCurrentSet; 
  TQ*    m_timerQueue;
  int    m_maxSocket;
};

} // namespace adv_cpp

#endif // ifndef __SELECT_REACTOR_IMPL__
